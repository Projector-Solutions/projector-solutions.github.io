memberSearchIndex = [{"p":"org.projector.impl","c":"DefaultLoop","l":"ADD"},{"p":"org.projector.types","c":"Table","l":"add(int, int, Object)","url":"add(int,int,java.lang.Object)"},{"p":"org.projector.dsv.data","c":"DsvTable","l":"addCell(int, int)","url":"addCell(int,int)"},{"p":"org.projector.impl","c":"DefaultStream","l":"all(Consumer<ValueType, Boolean>)","url":"all(org.projector.interfaces.Consumer)"},{"p":"org.projector.interfaces","c":"Stream","l":"all(Consumer<ValueType, Boolean>)","url":"all(org.projector.interfaces.Consumer)"},{"p":"org.projector.impl","c":"DefaultStream","l":"any(Consumer<ValueType, Boolean>)","url":"any(org.projector.interfaces.Consumer)"},{"p":"org.projector.interfaces","c":"Stream","l":"any(Consumer<ValueType, Boolean>)","url":"any(org.projector.interfaces.Consumer)"},{"p":"org.projector.utils","c":"StringJoiner","l":"append(char)"},{"p":"org.projector.utils","c":"StringJoiner","l":"append(CharSequence)","url":"append(java.lang.CharSequence)"},{"p":"org.projector.utils","c":"StringJoiner","l":"append(CharSequence, int, int)","url":"append(java.lang.CharSequence,int,int)"},{"p":"org.projector.utils","c":"StringJoiner","l":"append(Object)","url":"append(java.lang.Object)"},{"p":"org.projector.impl","c":"DefaultStream","l":"average(Consumer<ValueType, Double>)","url":"average(org.projector.interfaces.Consumer)"},{"p":"org.projector.interfaces","c":"Stream","l":"average(Consumer<ValueType, Double>)","url":"average(org.projector.interfaces.Consumer)"},{"p":"org.projector.utils","c":"StringJoiner","l":"charAt(int)"},{"p":"org.projector.utils","c":"Nullable","l":"checkAllNotNull(Object[], String)","url":"checkAllNotNull(java.lang.Object[],java.lang.String)"},{"p":"org.projector.utils","c":"Nullable","l":"checkAllNotNull(Object[], String, String)","url":"checkAllNotNull(java.lang.Object[],java.lang.String,java.lang.String)"},{"p":"org.projector.utils","c":"Nullable","l":"checkNotNull(Object, String)","url":"checkNotNull(java.lang.Object,java.lang.String)"},{"p":"org.projector.utils","c":"Nullable","l":"checkNotNull(Object, String, String)","url":"checkNotNull(java.lang.Object,java.lang.String,java.lang.String)"},{"p":"org.projector.dsv.data","c":"DsvTable","l":"clear()"},{"p":"org.projector.impl","c":"DefaultMutableStreamIterator","l":"clear()"},{"p":"org.projector.interfaces","c":"MutableStreamIterator","l":"clear()"},{"p":"org.projector.dsv.impl","c":"DefaultDeserializer","l":"COMMA"},{"p":"org.projector.dsv.impl","c":"DefaultSerializer","l":"COMMA"},{"p":"org.projector.interfaces","c":"DeafConsumer","l":"consume()"},{"p":"org.projector.interfaces","c":"Consumer","l":"consume(V)"},{"p":"org.projector.interfaces","c":"VoidConsumer","l":"consume(V)"},{"p":"org.projector.utils","c":"Functional","l":"createJoinedStream(Collection<T>...)","url":"createJoinedStream(java.util.Collection...)"},{"p":"org.projector.utils","c":"Functional","l":"createStream(T...)"},{"p":"org.projector.dsv.impl","c":"DefaultDeserializer","l":"DefaultDeserializer(char)","url":"%3Cinit%3E(char)"},{"p":"org.projector.impl","c":"DefaultLoop","l":"DefaultLoop()","url":"%3Cinit%3E()"},{"p":"org.projector.impl","c":"DefaultLoopTest","l":"DefaultLoopTest()","url":"%3Cinit%3E()"},{"p":"org.projector.impl","c":"DefaultMutableStreamIterator","l":"DefaultMutableStreamIterator(Stream<ValueType>)","url":"%3Cinit%3E(org.projector.interfaces.Stream)"},{"p":"org.projector.impl","c":"DefaultMutableStreamIteratorTest","l":"DefaultMutableStreamIteratorTest()","url":"%3Cinit%3E()"},{"p":"org.projector.dsv.impl","c":"DefaultReader","l":"DefaultReader(InputStream, DsvDeserializer)","url":"%3Cinit%3E(java.io.InputStream,org.projector.dsv.DsvDeserializer)"},{"p":"org.projector.dsv.impl","c":"DefaultReader","l":"DefaultReader(Reader, DsvDeserializer)","url":"%3Cinit%3E(java.io.Reader,org.projector.dsv.DsvDeserializer)"},{"p":"org.projector.dsv.impl","c":"DefaultSerializer","l":"DefaultSerializer(char)","url":"%3Cinit%3E(char)"},{"p":"org.projector.impl","c":"DefaultStream","l":"DefaultStream(List<ValueType>)","url":"%3Cinit%3E(java.util.List)"},{"p":"org.projector.impl","c":"DefaultStream","l":"DefaultStream(List<ValueType>, boolean)","url":"%3Cinit%3E(java.util.List,boolean)"},{"p":"org.projector.impl","c":"DefaultStream","l":"DefaultStream(ValueType...)","url":"%3Cinit%3E(ValueType...)"},{"p":"org.projector.impl","c":"DefaultStreamIterator","l":"DefaultStreamIterator(Stream<ValueType>)","url":"%3Cinit%3E(org.projector.interfaces.Stream)"},{"p":"org.projector.impl","c":"DefaultStreamIteratorTest","l":"DefaultStreamIteratorTest()","url":"%3Cinit%3E()"},{"p":"org.projector.impl","c":"DefaultStreamTest","l":"DefaultStreamTest()","url":"%3Cinit%3E()"},{"p":"org.projector.dsv.impl","c":"DefaultWriter","l":"DefaultWriter(OutputStream, DsvSerializer)","url":"%3Cinit%3E(java.io.OutputStream,org.projector.dsv.DsvSerializer)"},{"p":"org.projector.dsv.impl","c":"DefaultWriter","l":"DefaultWriter(Writer, DsvSerializer)","url":"%3Cinit%3E(java.io.Writer,org.projector.dsv.DsvSerializer)"},{"p":"org.projector.utils","c":"StringJoiner","l":"delete(int, int)","url":"delete(int,int)"},{"p":"org.projector.utils","c":"StringJoiner","l":"deleteCharAt(int)"},{"p":"org.projector.dsv","c":"DsvDeserializer","l":"deserialize(List<String>)","url":"deserialize(java.util.List)"},{"p":"org.projector.dsv.impl","c":"DefaultDeserializer","l":"deserialize(List<String>)","url":"deserialize(java.util.List)"},{"p":"org.projector.dsv","c":"DsvCellTest","l":"DsvCellTest()","url":"%3Cinit%3E()"},{"p":"org.projector.dsv","c":"DsvReaderTest","l":"DsvReaderTest()","url":"%3Cinit%3E()"},{"p":"org.projector.dsv.data","c":"DsvTable","l":"DsvTable()","url":"%3Cinit%3E()"},{"p":"org.projector.dsv","c":"DsvTableTest","l":"DsvTableTest()","url":"%3Cinit%3E()"},{"p":"org.projector.dsv","c":"DsvWriterTest","l":"DsvWriterTest()","url":"%3Cinit%3E()"},{"p":"org.projector.types","c":"Duet","l":"Duet(A, B)","url":"%3Cinit%3E(A,B)"},{"p":"org.projector.types","c":"DuetTest","l":"DuetTest()","url":"%3Cinit%3E()"},{"p":"org.projector.utils","c":"Equaling","l":"Equaling()","url":"%3Cinit%3E()"},{"p":"org.projector.utils","c":"EqualingTest","l":"EqualingTest()","url":"%3Cinit%3E()"},{"p":"org.projector.types","c":"Duet","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.projector.types","c":"Trio","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.projector.utils","c":"StringJoiner","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.projector.utils","c":"Equaling","l":"equals(Object...)","url":"equals(java.lang.Object...)"},{"p":"org.projector.utils","c":"Equaling","l":"equalsArrays(T[]...)"},{"p":"org.projector.types","c":"Table","l":"exportByColumns()"},{"p":"org.projector.types","c":"Table","l":"exportByRows()"},{"p":"org.projector.utils","c":"Nullable","l":"firstOrDefault(List<V>, V)","url":"firstOrDefault(java.util.List,V)"},{"p":"org.projector.impl","c":"DefaultStream","l":"foreach(Consumer<ValueType, ValueType>)","url":"foreach(org.projector.interfaces.Consumer)"},{"p":"org.projector.interfaces","c":"Stream","l":"foreach(Consumer<ValueType, ValueType>)","url":"foreach(org.projector.interfaces.Consumer)"},{"p":"org.projector.impl","c":"DefaultStream","l":"foreach(VoidConsumer<ValueType>)","url":"foreach(org.projector.interfaces.VoidConsumer)"},{"p":"org.projector.interfaces","c":"Stream","l":"foreach(VoidConsumer<ValueType>)","url":"foreach(org.projector.interfaces.VoidConsumer)"},{"p":"org.projector.utils","c":"Functional","l":"Functional()","url":"%3Cinit%3E()"},{"p":"org.projector.utils","c":"FunctionalTest","l":"FunctionalTest()","url":"%3Cinit%3E()"},{"p":"org.projector.types","c":"NotNullValue","l":"get()"},{"p":"org.projector.dsv.data","c":"DsvCell","l":"get(Consumer<String, T>)","url":"get(org.projector.interfaces.Consumer)"},{"p":"org.projector.impl","c":"DefaultStream","l":"get(int)"},{"p":"org.projector.interfaces","c":"Stream","l":"get(int)"},{"p":"org.projector.types","c":"Table","l":"get(int, int)","url":"get(int,int)"},{"p":"org.projector.types","c":"Duet","l":"getA()"},{"p":"org.projector.impl","c":"DefaultLoop","l":"getAction()"},{"p":"org.projector.types","c":"Duet","l":"getB()"},{"p":"org.projector.dsv.data","c":"DsvCell","l":"getBoolean()"},{"p":"org.projector.dsv.data","c":"DsvCell","l":"getByte()"},{"p":"org.projector.types","c":"Trio","l":"getC()"},{"p":"org.projector.dsv.data","c":"DsvTable","l":"getCell(int, int)","url":"getCell(int,int)"},{"p":"org.projector.dsv.data","c":"DsvTable","l":"getColumn(int)"},{"p":"org.projector.dsv.data","c":"DsvCell","l":"getColumnNumber()"},{"p":"org.projector.dsv.data","c":"DsvTable","l":"getColumnsCount()"},{"p":"org.projector.dsv.data","c":"DsvCell","l":"getDouble()"},{"p":"org.projector.dsv.data","c":"DsvCell","l":"getFloat()"},{"p":"org.projector.dsv.data","c":"DsvCell","l":"getInt()"},{"p":"org.projector.dsv.data","c":"DsvCell","l":"getLong()"},{"p":"org.projector.dsv.data","c":"DsvTable","l":"getRow(int)"},{"p":"org.projector.dsv.data","c":"DsvCell","l":"getRowNumber()"},{"p":"org.projector.dsv.data","c":"DsvTable","l":"getRowsCount()"},{"p":"org.projector.dsv.data","c":"DsvCell","l":"getShort()"},{"p":"org.projector.dsv.data","c":"DsvCell","l":"getString()"},{"p":"org.projector.impl","c":"DefaultStream","l":"group(Consumer<Duet<ValueType, OutType>, OutType>, Consumer<ValueType, Integer>)","url":"group(org.projector.interfaces.Consumer,org.projector.interfaces.Consumer)"},{"p":"org.projector.interfaces","c":"Stream","l":"group(Consumer<Duet<ValueType, OutType>, OutType>, Consumer<ValueType, Integer>)","url":"group(org.projector.interfaces.Consumer,org.projector.interfaces.Consumer)"},{"p":"org.projector.types","c":"Duet","l":"hashCode()"},{"p":"org.projector.types","c":"Trio","l":"hashCode()"},{"p":"org.projector.impl","c":"DefaultStreamIterator","l":"hasNext()"},{"p":"org.projector.interfaces","c":"StreamIterator","l":"hasNext()"},{"p":"org.projector.dsv.data","c":"DsvCell","l":"hasValue()"},{"p":"org.projector.types","c":"NotNullValue","l":"hasValue()"},{"p":"org.projector.utils","c":"Nullable","l":"ifNotNull(V, Consumer<V, O>)","url":"ifNotNull(V,org.projector.interfaces.Consumer)"},{"p":"org.projector.utils","c":"Nullable","l":"ifNull(V, DeafConsumer<O>)","url":"ifNull(V,org.projector.interfaces.DeafConsumer)"},{"p":"org.projector.utils","c":"Nullable","l":"ifNullOrNot(V, DeafConsumer<O>, Consumer<V, O>)","url":"ifNullOrNot(V,org.projector.interfaces.DeafConsumer,org.projector.interfaces.Consumer)"},{"p":"org.projector.impl","c":"DefaultStreamIterator","l":"index"},{"p":"org.projector.impl","c":"DefaultLoop","l":"index()"},{"p":"org.projector.interfaces","c":"Loop","l":"index()"},{"p":"org.projector.types","c":"Table","l":"isDefined(int, int)","url":"isDefined(int,int)"},{"p":"org.projector.impl","c":"DefaultStream","l":"isMutable()"},{"p":"org.projector.interfaces","c":"Stream","l":"isMutable()"},{"p":"org.projector.impl","c":"DefaultStream","l":"iterate()"},{"p":"org.projector.interfaces","c":"Stream","l":"iterate()"},{"p":"org.projector.utils","c":"Nullable","l":"lastOrDefault(List<V>, V)","url":"lastOrDefault(java.util.List,V)"},{"p":"org.projector.utils","c":"StringJoiner","l":"length()"},{"p":"org.projector.utils","c":"Functional","l":"map(Selector<V, K>, V...)","url":"map(org.projector.interfaces.Selector,V...)"},{"p":"org.projector.impl","c":"DefaultStream","l":"map(Selector<ValueType, KeyType>)","url":"map(org.projector.interfaces.Selector)"},{"p":"org.projector.interfaces","c":"Stream","l":"map(Selector<ValueType, KeyType>)","url":"map(org.projector.interfaces.Selector)"},{"p":"org.projector.impl","c":"DefaultStream","l":"max(Consumer<ValueType, Double>)","url":"max(org.projector.interfaces.Consumer)"},{"p":"org.projector.interfaces","c":"Stream","l":"max(Consumer<ValueType, Double>)","url":"max(org.projector.interfaces.Consumer)"},{"p":"org.projector.impl","c":"DefaultStream","l":"maxDuet(Consumer<ValueType, Double>)","url":"maxDuet(org.projector.interfaces.Consumer)"},{"p":"org.projector.interfaces","c":"Stream","l":"maxDuet(Consumer<ValueType, Double>)","url":"maxDuet(org.projector.interfaces.Consumer)"},{"p":"org.projector.impl","c":"DefaultStream","l":"min(Consumer<ValueType, Double>)","url":"min(org.projector.interfaces.Consumer)"},{"p":"org.projector.interfaces","c":"Stream","l":"min(Consumer<ValueType, Double>)","url":"min(org.projector.interfaces.Consumer)"},{"p":"org.projector.impl","c":"DefaultStream","l":"minDuet(Consumer<ValueType, Double>)","url":"minDuet(org.projector.interfaces.Consumer)"},{"p":"org.projector.interfaces","c":"Stream","l":"minDuet(Consumer<ValueType, Double>)","url":"minDuet(org.projector.interfaces.Consumer)"},{"p":"org.projector.impl","c":"DefaultStreamIterator","l":"next()"},{"p":"org.projector.interfaces","c":"StreamIterator","l":"next()"},{"p":"org.projector.types","c":"NotNullValue","l":"NotNullValue(String, T)","url":"%3Cinit%3E(java.lang.String,T)"},{"p":"org.projector.types","c":"NotNullValue","l":"NotNullValue(T)","url":"%3Cinit%3E(T)"},{"p":"org.projector.utils","c":"Nullable","l":"Nullable()","url":"%3Cinit%3E()"},{"p":"org.projector.utils","c":"NullableTest","l":"NullableTest()","url":"%3Cinit%3E()"},{"p":"org.projector.dsv","c":"DsvCellTest","l":"prepare()"},{"p":"org.projector.dsv","c":"DsvReader","l":"read()"},{"p":"org.projector.dsv.impl","c":"DefaultReader","l":"read()"},{"p":"org.projector.impl","c":"DefaultMutableStreamIterator","l":"remove()"},{"p":"org.projector.interfaces","c":"MutableStreamIterator","l":"remove()"},{"p":"org.projector.impl","c":"DefaultStream","l":"remove(int)"},{"p":"org.projector.interfaces","c":"Stream","l":"remove(int)"},{"p":"org.projector.types","c":"Table","l":"remove(int, int)","url":"remove(int,int)"},{"p":"org.projector.impl","c":"DefaultStream","l":"remove(int, ValueType)","url":"remove(int,ValueType)"},{"p":"org.projector.interfaces","c":"Stream","l":"remove(int, ValueType)","url":"remove(int,ValueType)"},{"p":"org.projector.dsv.data","c":"DsvTable","l":"removeCell(int, int)","url":"removeCell(int,int)"},{"p":"org.projector.utils","c":"Functional","l":"select(Selector<V, O>, V...)","url":"select(org.projector.interfaces.Selector,V...)"},{"p":"org.projector.impl","c":"DefaultStream","l":"select(Selector<ValueType, OutType>)","url":"select(org.projector.interfaces.Selector)"},{"p":"org.projector.interfaces","c":"Stream","l":"select(Selector<ValueType, OutType>)","url":"select(org.projector.interfaces.Selector)"},{"p":"org.projector.interfaces","c":"Selector","l":"select(V, Loop)","url":"select(V,org.projector.interfaces.Loop)"},{"p":"org.projector.dsv.impl","c":"DefaultDeserializer","l":"SEMICOLON"},{"p":"org.projector.dsv.impl","c":"DefaultSerializer","l":"SEMICOLON"},{"p":"org.projector.dsv","c":"DsvSerializer","l":"serialize(DsvTable)","url":"serialize(org.projector.dsv.data.DsvTable)"},{"p":"org.projector.dsv.impl","c":"DefaultSerializer","l":"serialize(DsvTable)","url":"serialize(org.projector.dsv.data.DsvTable)"},{"p":"org.projector.impl","c":"DefaultStream","l":"set(int, ValueType)","url":"set(int,ValueType)"},{"p":"org.projector.interfaces","c":"Stream","l":"set(int, ValueType)","url":"set(int,ValueType)"},{"p":"org.projector.types","c":"NotNullValue","l":"set(T)"},{"p":"org.projector.dsv.data","c":"DsvCell","l":"set(T, Consumer<T, String>)","url":"set(T,org.projector.interfaces.Consumer)"},{"p":"org.projector.types","c":"Duet","l":"setA(A)"},{"p":"org.projector.impl","c":"DefaultLoop","l":"setAction(int)"},{"p":"org.projector.types","c":"Duet","l":"setB(B)"},{"p":"org.projector.dsv.data","c":"DsvCell","l":"setBoolean(boolean)"},{"p":"org.projector.dsv.data","c":"DsvCell","l":"setByte(byte)"},{"p":"org.projector.types","c":"Trio","l":"setC(C)"},{"p":"org.projector.dsv","c":"DsvReader","l":"setDeserializer(DsvDeserializer)","url":"setDeserializer(org.projector.dsv.DsvDeserializer)"},{"p":"org.projector.dsv.impl","c":"DefaultReader","l":"setDeserializer(DsvDeserializer)","url":"setDeserializer(org.projector.dsv.DsvDeserializer)"},{"p":"org.projector.dsv.data","c":"DsvCell","l":"setDouble(double)"},{"p":"org.projector.dsv.data","c":"DsvCell","l":"setFloat(float)"},{"p":"org.projector.impl","c":"DefaultLoop","l":"setIndex(int)"},{"p":"org.projector.dsv.data","c":"DsvCell","l":"setInt(int)"},{"p":"org.projector.dsv.data","c":"DsvCell","l":"setLong(long)"},{"p":"org.projector.impl","c":"DefaultStream","l":"setMutable(boolean)"},{"p":"org.projector.interfaces","c":"Stream","l":"setMutable(boolean)"},{"p":"org.projector.dsv","c":"DsvWriter","l":"setSerializer(DsvSerializer)","url":"setSerializer(org.projector.dsv.DsvSerializer)"},{"p":"org.projector.dsv.impl","c":"DefaultWriter","l":"setSerializer(DsvSerializer)","url":"setSerializer(org.projector.dsv.DsvSerializer)"},{"p":"org.projector.dsv.data","c":"DsvCell","l":"setShort(int)"},{"p":"org.projector.dsv.data","c":"DsvCell","l":"setString(String)","url":"setString(java.lang.String)"},{"p":"org.projector.dsv","c":"SimpleDeserializerTest","l":"SimpleDeserializerTest()","url":"%3Cinit%3E()"},{"p":"org.projector.dsv","c":"SimpleSerializerTest","l":"SimpleSerializerTest()","url":"%3Cinit%3E()"},{"p":"org.projector.types","c":"Table","l":"size()"},{"p":"org.projector.impl","c":"DefaultLoop","l":"SKIP"},{"p":"org.projector.impl","c":"DefaultLoop","l":"skip()"},{"p":"org.projector.interfaces","c":"Loop","l":"skip()"},{"p":"org.projector.impl","c":"DefaultStreamIterator","l":"skip(int)"},{"p":"org.projector.interfaces","c":"StreamIterator","l":"skip(int)"},{"p":"org.projector.impl","c":"DefaultLoop","l":"STOP"},{"p":"org.projector.impl","c":"DefaultLoop","l":"stop()"},{"p":"org.projector.interfaces","c":"Loop","l":"stop()"},{"p":"org.projector.impl","c":"DefaultStreamIterator","l":"stream"},{"p":"org.projector.annotations","c":"NotNull","l":"strict()"},{"p":"org.projector.utils","c":"StringJoiner","l":"StringJoiner(char)","url":"%3Cinit%3E(char)"},{"p":"org.projector.utils","c":"StringJoiner","l":"StringJoiner(CharSequence)","url":"%3Cinit%3E(java.lang.CharSequence)"},{"p":"org.projector.utils","c":"StringJoiner","l":"StringJoiner(CharSequence, CharSequence)","url":"%3Cinit%3E(java.lang.CharSequence,java.lang.CharSequence)"},{"p":"org.projector.utils","c":"StringJoinerTest","l":"StringJoinerTest()","url":"%3Cinit%3E()"},{"p":"org.projector.utils","c":"StringJoiner","l":"subSequence(int, int)","url":"subSequence(int,int)"},{"p":"org.projector.impl","c":"DefaultStream","l":"sumDouble(Consumer<ValueType, Double>)","url":"sumDouble(org.projector.interfaces.Consumer)"},{"p":"org.projector.interfaces","c":"Stream","l":"sumDouble(Consumer<ValueType, Double>)","url":"sumDouble(org.projector.interfaces.Consumer)"},{"p":"org.projector.impl","c":"DefaultStream","l":"sumFloat(Consumer<ValueType, Float>)","url":"sumFloat(org.projector.interfaces.Consumer)"},{"p":"org.projector.interfaces","c":"Stream","l":"sumFloat(Consumer<ValueType, Float>)","url":"sumFloat(org.projector.interfaces.Consumer)"},{"p":"org.projector.impl","c":"DefaultStream","l":"sumInt(Consumer<ValueType, Integer>)","url":"sumInt(org.projector.interfaces.Consumer)"},{"p":"org.projector.interfaces","c":"Stream","l":"sumInt(Consumer<ValueType, Integer>)","url":"sumInt(org.projector.interfaces.Consumer)"},{"p":"org.projector.impl","c":"DefaultStream","l":"sumLong(Consumer<ValueType, Long>)","url":"sumLong(org.projector.interfaces.Consumer)"},{"p":"org.projector.interfaces","c":"Stream","l":"sumLong(Consumer<ValueType, Long>)","url":"sumLong(org.projector.interfaces.Consumer)"},{"p":"org.projector.dsv.impl","c":"DefaultDeserializer","l":"TAB"},{"p":"org.projector.dsv.impl","c":"DefaultSerializer","l":"TAB"},{"p":"org.projector.types","c":"Table","l":"Table()","url":"%3Cinit%3E()"},{"p":"org.projector.types","c":"Table","l":"Table(Map<Duet<Integer, Integer>, Object>)","url":"%3Cinit%3E(java.util.Map)"},{"p":"org.projector.types","c":"TableTest","l":"TableTest()","url":"%3Cinit%3E()"},{"p":"org.projector.types","c":"TableTest","l":"test2x2ByColumns()"},{"p":"org.projector.types","c":"TableTest","l":"test2x2ByRows()"},{"p":"org.projector.types","c":"TableTest","l":"test5x5ByColumns()"},{"p":"org.projector.types","c":"TableTest","l":"test5x5ByRows()"},{"p":"org.projector.impl","c":"DefaultStreamTest","l":"testAll()"},{"p":"org.projector.impl","c":"DefaultStreamTest","l":"testAny()"},{"p":"org.projector.utils","c":"StringJoinerTest","l":"testAppend()"},{"p":"org.projector.utils","c":"StringJoinerTest","l":"testAppendChar()"},{"p":"org.projector.utils","c":"StringJoinerTest","l":"testAppendRange()"},{"p":"org.projector.utils","c":"NullableTest","l":"testArrayNameIsNull()"},{"p":"org.projector.impl","c":"DefaultStreamTest","l":"testAverage()"},{"p":"org.projector.dsv","c":"DsvCellTest","l":"testBoolean()"},{"p":"org.projector.impl","c":"DefaultLoopTest","l":"testBreak()"},{"p":"org.projector.dsv","c":"DsvCellTest","l":"testByte()"},{"p":"org.projector.dsv","c":"DsvTableTest","l":"testCell()"},{"p":"org.projector.utils","c":"StringJoinerTest","l":"testCharAt()"},{"p":"org.projector.utils","c":"StringJoinerTest","l":"testCharAtNegative()"},{"p":"org.projector.utils","c":"StringJoinerTest","l":"testCharAtPositive()"},{"p":"org.projector.utils","c":"NullableTest","l":"testCheckNotNull()"},{"p":"org.projector.dsv","c":"DsvTableTest","l":"testClear()"},{"p":"org.projector.impl","c":"DefaultMutableStreamIteratorTest","l":"testClearEmpty()"},{"p":"org.projector.impl","c":"DefaultMutableStreamIteratorTest","l":"testClearFromIndex()"},{"p":"org.projector.impl","c":"DefaultMutableStreamIteratorTest","l":"testClearFromZero()"},{"p":"org.projector.dsv","c":"DsvTableTest","l":"testColumn()"},{"p":"org.projector.utils","c":"StringJoinerTest","l":"testDelete()"},{"p":"org.projector.utils","c":"StringJoinerTest","l":"testDeleteCharAt()"},{"p":"org.projector.utils","c":"StringJoinerTest","l":"testDeleteEndAfterLength()"},{"p":"org.projector.utils","c":"StringJoinerTest","l":"testDeleteEndNegative()"},{"p":"org.projector.utils","c":"StringJoinerTest","l":"testDeleteStartAfterEnd()"},{"p":"org.projector.utils","c":"StringJoinerTest","l":"testDeleteStartAfterLength()"},{"p":"org.projector.utils","c":"StringJoinerTest","l":"testDeleteStartNegative()"},{"p":"org.projector.dsv","c":"DsvCellTest","l":"testDouble()"},{"p":"org.projector.dsv","c":"DsvReaderTest","l":"testEmptyTable()"},{"p":"org.projector.dsv","c":"SimpleDeserializerTest","l":"testEmptyTable()"},{"p":"org.projector.dsv","c":"SimpleSerializerTest","l":"testEmptyTable()"},{"p":"org.projector.types","c":"DuetTest","l":"testEquals()"},{"p":"org.projector.types","c":"TrioTest","l":"testEquals()"},{"p":"org.projector.utils","c":"EqualingTest","l":"testEqualsArrays()"},{"p":"org.projector.utils","c":"EqualingTest","l":"testEqualsEmpty()"},{"p":"org.projector.utils","c":"EqualingTest","l":"testEqualsInt()"},{"p":"org.projector.utils","c":"EqualingTest","l":"testEqualsNull()"},{"p":"org.projector.utils","c":"EqualingTest","l":"testEqualsString()"},{"p":"org.projector.utils","c":"EqualingTest","l":"testEqualsVararg()"},{"p":"org.projector.dsv","c":"SimpleSerializerTest","l":"testEscapeValues()"},{"p":"org.projector.utils","c":"NullableTest","l":"testFirstOrDefaultDefault()"},{"p":"org.projector.utils","c":"NullableTest","l":"testFirstOrDefaultFirstValue()"},{"p":"org.projector.utils","c":"NullableTest","l":"testFirstOrDefaultPenultimateValue()"},{"p":"org.projector.utils","c":"NullableTest","l":"testFirstOrDefaultSecondValue()"},{"p":"org.projector.impl","c":"DefaultStreamTest","l":"testForeachUpdate()"},{"p":"org.projector.impl","c":"DefaultStreamTest","l":"testForeachVoid()"},{"p":"org.projector.dsv","c":"DsvCellTest","l":"testGet()"},{"p":"org.projector.impl","c":"DefaultStreamTest","l":"testGetNoSuchElementEmpty()"},{"p":"org.projector.impl","c":"DefaultStreamTest","l":"testGetNoSuchElementNegative()"},{"p":"org.projector.impl","c":"DefaultStreamTest","l":"testGetNoSuchElementOverLength()"},{"p":"org.projector.impl","c":"DefaultStreamTest","l":"testGroup()"},{"p":"org.projector.types","c":"DuetTest","l":"testHashCode()"},{"p":"org.projector.types","c":"TrioTest","l":"testHashCode()"},{"p":"org.projector.impl","c":"DefaultStreamIteratorTest","l":"testHasNextMultiIterator()"},{"p":"org.projector.impl","c":"DefaultStreamIteratorTest","l":"testHasNextOverLength()"},{"p":"org.projector.impl","c":"DefaultStreamIteratorTest","l":"testHasNextSingleIterator()"},{"p":"org.projector.utils","c":"NullableTest","l":"testIfNotNull()"},{"p":"org.projector.utils","c":"NullableTest","l":"testIfNull()"},{"p":"org.projector.impl","c":"DefaultLoopTest","l":"testIndex()"},{"p":"org.projector.dsv","c":"DsvCellTest","l":"testInt()"},{"p":"org.projector.impl","c":"DefaultStreamTest","l":"testIsMutable()"},{"p":"org.projector.impl","c":"DefaultStreamTest","l":"testIterateImmutableCorrect()"},{"p":"org.projector.impl","c":"DefaultStreamTest","l":"testIterateImmutableFail()"},{"p":"org.projector.utils","c":"NullableTest","l":"testLastOrDefaultDefault()"},{"p":"org.projector.utils","c":"NullableTest","l":"testLastOrDefaultLastValue()"},{"p":"org.projector.utils","c":"StringJoinerTest","l":"testLength()"},{"p":"org.projector.utils","c":"StringJoinerTest","l":"testLineJoining()"},{"p":"org.projector.impl","c":"DefaultStreamTest","l":"testListConstructor()"},{"p":"org.projector.dsv","c":"DsvCellTest","l":"testLong()"},{"p":"org.projector.impl","c":"DefaultStreamTest","l":"testMap()"},{"p":"org.projector.utils","c":"FunctionalTest","l":"testMap()"},{"p":"org.projector.utils","c":"FunctionalTest","l":"testMapLoop()"},{"p":"org.projector.utils","c":"FunctionalTest","l":"testMapNullArray()"},{"p":"org.projector.impl","c":"DefaultStreamTest","l":"testMax()"},{"p":"org.projector.impl","c":"DefaultStreamTest","l":"testMaxDuet()"},{"p":"org.projector.impl","c":"DefaultStreamTest","l":"testMin()"},{"p":"org.projector.impl","c":"DefaultStreamTest","l":"testMinDuet()"},{"p":"org.projector.impl","c":"DefaultStreamIteratorTest","l":"testNextMultiIterator()"},{"p":"org.projector.impl","c":"DefaultStreamIteratorTest","l":"testNextOverLength()"},{"p":"org.projector.impl","c":"DefaultStreamIteratorTest","l":"testNextSingleIterator()"},{"p":"org.projector.types","c":"DuetTest","l":"testNoNPE()"},{"p":"org.projector.types","c":"TrioTest","l":"testNoNPE()"},{"p":"org.projector.dsv","c":"SimpleDeserializerTest","l":"testNormalTable()"},{"p":"org.projector.dsv","c":"SimpleSerializerTest","l":"testNormalTable()"},{"p":"org.projector.utils","c":"EqualingTest","l":"testNotEqualsInt()"},{"p":"org.projector.utils","c":"EqualingTest","l":"testNotEqualsString()"},{"p":"org.projector.utils","c":"EqualingTest","l":"testNotEqualsVararg()"},{"p":"org.projector.utils","c":"EqualingTest","l":"testNotEqualsWithNull()"},{"p":"org.projector.utils","c":"FunctionalTest","l":"testNullMapper()"},{"p":"org.projector.utils","c":"FunctionalTest","l":"testNullSelector()"},{"p":"org.projector.dsv","c":"DsvReaderTest","l":"testNullStream()"},{"p":"org.projector.dsv","c":"DsvWriterTest","l":"testNullStream()"},{"p":"org.projector.dsv","c":"DsvWriterTest","l":"testNullTable()"},{"p":"org.projector.dsv","c":"DsvReaderTest","l":"testNullWriter()"},{"p":"org.projector.dsv","c":"DsvWriterTest","l":"testNullWriter()"},{"p":"org.projector.dsv","c":"DsvCellTest","l":"testPosition()"},{"p":"org.projector.dsv","c":"DsvReaderTest","l":"testReadMultilineTable()"},{"p":"org.projector.dsv","c":"DsvReaderTest","l":"testReadOnelineTable()"},{"p":"org.projector.dsv","c":"DsvReaderTest","l":"testReadSegmentationTable()"},{"p":"org.projector.impl","c":"DefaultStreamTest","l":"testRemoveByIndex()"},{"p":"org.projector.impl","c":"DefaultStreamTest","l":"testRemoveByIndexFail()"},{"p":"org.projector.impl","c":"DefaultStreamTest","l":"testRemoveByValue()"},{"p":"org.projector.impl","c":"DefaultStreamTest","l":"testRemoveByValueFail()"},{"p":"org.projector.dsv","c":"DsvTableTest","l":"testRemoveCell()"},{"p":"org.projector.impl","c":"DefaultMutableStreamIteratorTest","l":"testRemoveCorrect()"},{"p":"org.projector.impl","c":"DefaultMutableStreamIteratorTest","l":"testRemoveEmpty()"},{"p":"org.projector.impl","c":"DefaultStreamTest","l":"testRemoveNegativeIndex()"},{"p":"org.projector.impl","c":"DefaultStreamTest","l":"testRemoveNoValue()"},{"p":"org.projector.impl","c":"DefaultMutableStreamIteratorTest","l":"testRemoveOverLength()"},{"p":"org.projector.impl","c":"DefaultStreamTest","l":"testRemoveOverLength()"},{"p":"org.projector.dsv","c":"DsvTableTest","l":"testRow()"},{"p":"org.projector.dsv","c":"DsvTableTest","l":"testSegmentationRow()"},{"p":"org.projector.dsv","c":"SimpleSerializerTest","l":"testSegmentationTable()"},{"p":"org.projector.impl","c":"DefaultStreamTest","l":"testSelect()"},{"p":"org.projector.utils","c":"FunctionalTest","l":"testSelect()"},{"p":"org.projector.utils","c":"FunctionalTest","l":"testSelectLoop()"},{"p":"org.projector.utils","c":"FunctionalTest","l":"testSelectNullArray()"},{"p":"org.projector.dsv","c":"DsvCellTest","l":"testSet()"},{"p":"org.projector.dsv","c":"DsvCellTest","l":"testSetFloat()"},{"p":"org.projector.dsv","c":"DsvCellTest","l":"testShort()"},{"p":"org.projector.dsv","c":"DsvTableTest","l":"testSize()"},{"p":"org.projector.impl","c":"DefaultLoopTest","l":"testSkip()"},{"p":"org.projector.impl","c":"DefaultStreamIteratorTest","l":"testSkipFromIndex()"},{"p":"org.projector.impl","c":"DefaultStreamIteratorTest","l":"testSkipFromZero()"},{"p":"org.projector.dsv","c":"DsvCellTest","l":"testString()"},{"p":"org.projector.utils","c":"StringJoinerTest","l":"testSubSequence()"},{"p":"org.projector.utils","c":"StringJoinerTest","l":"testSubSequenceEndAfterLength()"},{"p":"org.projector.utils","c":"StringJoinerTest","l":"testSubSequenceNegativeEnd()"},{"p":"org.projector.utils","c":"StringJoinerTest","l":"testSubSequenceNegativeStart()"},{"p":"org.projector.utils","c":"StringJoinerTest","l":"testSubSequenceStartAfterEnd()"},{"p":"org.projector.utils","c":"StringJoinerTest","l":"testSubSequenceStartAfterLength()"},{"p":"org.projector.impl","c":"DefaultStreamTest","l":"testSum()"},{"p":"org.projector.utils","c":"StringJoinerTest","l":"testToString()"},{"p":"org.projector.dsv","c":"SimpleDeserializerTest","l":"testUnescapeValues()"},{"p":"org.projector.utils","c":"NullableTest","l":"testValueNameIsNull()"},{"p":"org.projector.impl","c":"DefaultStreamTest","l":"testVarArgsConstructor()"},{"p":"org.projector.impl","c":"DefaultStreamTest","l":"testWhere()"},{"p":"org.projector.dsv","c":"DsvWriterTest","l":"testWriteMultilineTable()"},{"p":"org.projector.dsv","c":"DsvWriterTest","l":"testWriteOnelineTable()"},{"p":"org.projector.dsv.data","c":"DsvTable","l":"toCellStream()"},{"p":"org.projector.impl","c":"DefaultStream","l":"toList()"},{"p":"org.projector.interfaces","c":"Stream","l":"toList()"},{"p":"org.projector.dsv.data","c":"DsvCell","l":"toString()"},{"p":"org.projector.utils","c":"StringJoiner","l":"toString()"},{"p":"org.projector.dsv.data","c":"DsvTable","l":"toValueStream()"},{"p":"org.projector.types","c":"Trio","l":"Trio(A, B, C)","url":"%3Cinit%3E(A,B,C)"},{"p":"org.projector.types","c":"TrioTest","l":"TrioTest()","url":"%3Cinit%3E()"},{"p":"org.projector.types","c":"NotNullValue","l":"update(T)"},{"p":"org.projector.annotations","c":"NotNull","l":"value()"},{"p":"org.projector.annotations","c":"Nullable","l":"value()"},{"p":"org.projector.impl","c":"DefaultStream","l":"where(Consumer<ValueType, Boolean>)","url":"where(org.projector.interfaces.Consumer)"},{"p":"org.projector.interfaces","c":"Stream","l":"where(Consumer<ValueType, Boolean>)","url":"where(org.projector.interfaces.Consumer)"},{"p":"org.projector.dsv","c":"DsvWriter","l":"write(DsvTable)","url":"write(org.projector.dsv.data.DsvTable)"},{"p":"org.projector.dsv.impl","c":"DefaultWriter","l":"write(DsvTable)","url":"write(org.projector.dsv.data.DsvTable)"}]